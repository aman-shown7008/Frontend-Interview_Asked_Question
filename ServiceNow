Basics - 
Version - The current ServiceNow release is Xanadu, released in Q4 2024. The next release, Yokohama, is scheduled for Q1 2025. ServiceNow releases two new versions each year. 


1.  What is ServiceNow? And why we use it.
A.  ServiceNow is a platform used to manage and automate workflows — like HR management, IT support, customer service, hotel management, etc.
    🧑‍💼Without ServiceNow:
    You face an issue (e.g., laptop not working)
    You email IT… then wait
    Someone replies asking for more info
    You reply again
    It gets forwarded… maybe lost
    You follow up again and again
    🔁 This leads to delays, confusion, and frustration

    ✅With ServiceNow:
    You go to a Self-Service Portal
    Submit a request with all required info
    The request auto-assigns to the right team
    You get real-time status updates ("In Progress", "Resolved")
    The support team sees all info in one place (your device, history, etc.)
    You’re notified when it's done and can give feedback
    Everything is logged, trackable, and reportable

    🚀Key Benefits of ServiceNow:
    One platform for all internal requests (IT, HR, Facilities, etc.)
    Faster response and resolution times
    No need to chase emails or phone calls
    Better accountability and transparency
    Improved employee experience



2.  Common Terms - 
A.  Concept You Mentioned	                            Correct ServiceNow Term
        HR Management      	                      Application / Module (e.g., HRSD)
      Functionality Flow	                      Workflow / Flow Designer Flow
       Business Logic Path	                      Process / Business Rule / Flow

    🔁Analogy:
    Think of an Instance like a house. Inside the house:
    HR = one room (Application)
    ITSM = another room
    Flows = electrical wiring (Workflow logic)
    Users = the people living in it

    🏠Instance in Real-Life Terms:
    Think of a ServiceNow Instance like your own private office building:
    🏢The building (instance) is yours — no one else can enter unless you allow them.
    Inside that building, you can:
    Set up departments like HR, IT, Finance (apps/modules)
    Define how people work (workflows/processes)
    Decide who gets access to which rooms (roles/permissions)

    🧠In Simple Terms:
    A ServiceNow Instance is your own separate copy of the ServiceNow platform, where your organization can build, manage, and automate its internal processes.

    Service-Portal: This provide a User-friendly self service experience it is an advanced UI of ServiceNow platform which provide access to specific features by using differnet widgets which can be customized and developed by ServiceNow developes. In this users can search knowledge articles request for any service.
    Catalog: They can request something directly to service portal.
    Request: They can see there own request.

    Support Authentication by ServiceNow - 
    Local Database - In this user and password is saved in servicenow instance in realted user racket.
    SSO - In this user is authenticated with detail provided by identity provider. For ex - Okhta is identity provider.
    LDAP - In this user is authenticated by a lightweight directory account O auth 2.0 by clientID and secretID by servicenow to consumer.
    Digest Token - Encrypted Username and password in the form of token is also supported & that is digest token.
    Multi-Factor - In this authentication is done by OTP code provided by google authenticator.

    In this we are going to have ROLE-BASED ACCESS to protech sensitive data acc to role based.
    ITIL, ADMIN, KNOWLEDGE ADMIN, APPROVER.

    👤Users: Individual people who use ServiceNow (e.g., employees, agents, managers).
    Example: John Doe (a service desk agent).
    Use: Can log in and perform tasks assigned based on their roles.

    🔐Roles: Permissions assigned to users to control access.
    Example: itil (for incident management), admin (full access).
    Use: Define what a user can do (like read/write/update records).

    👥Groups: Collection of users with similar responsibilities.
    Example: "Network Support", "HR Helpdesk".
    Use: For assigning tasks, approvals, notifications, or managing access in bulk.





3.  User Interface & Branding.
    Elements of Service Now UI.
    How Role Based access works.
    Application navigator favorites.
    Navigation User Interface.
A.  Profile - We can see details of that profile.
    Impersonate user - This enables other user view the profile.
    Elevate role - This elavate the role of loggedin User.



4.  List, Filters and Forms.
A.  List, Filters of Administration
    Form- How forms shows data in a table component OR Form personalization OR Customization from templates.
          A form displays information from one record in a data table.
    Form Configuration - The fields and layouts of the form can be configured servicenow admins can perform this configuration overall you can change the form design with two different options one is form layout in which you can create new views new fields and aadjust the layout of the form visible for the users.
    Form Design - Which is kind of advanced way to create field and adjust design on the from. We can also select the views by a form designas well as you can configure the form layout by right click on title bar of the form where you canb see.



5.  Task Management.
A.  Task - A task is any record that can be assigned or completed by a User in serviceNow. Users create tasks that are notified as the tasks moves along a workflow. Tasks can be assigned to user OR user groups.
    Task Management - In ServiceNow helps track and manage work like incidents, problems, or changes through tasks. It ensures tasks are assigned, prioritized, and completed efficiently within workflows.



6.  Notification-
A.  OutBound Notification - When serviceNow sends notification & that is received by a user. 
    Ex - Incident is assign to a group then all group members receive a email notification about the assignment of the ticket in their Queue.
    InBound Notification - When users responds to the email receive OR create new email and send it to servicenow.  It can basically perform some action on the records of table.   
    Ex - User can mark email in your instance email address and serviceNow can process that email & create incident racket and populate the fields as per information mentioned in email notification.

   System Notification - It has basically three different sections for different modules.     
   Email - It has modules related to modules notifications.                  
   Push - It has modules related to mobile push notifications.     
   Provider - It has modules to configure notifications for agent workspace and virtual agent which has separate applications of serviceNow.      

   OOB[ Out of Box ] Notification - It has configured for existing modules and notification provided by serviceNow like incident, change, problem management OR request notification    
   Notification Form - ServiceNow admins can create new notification.      
   Email Script - You can also add custom scripts in your notification to make content of notification more dynamic.

   We can Create Notification-
   System Notification > Notification > Fill Form.
   For Testing a Notification - 
   Incident > Open
   To see a Notification - 
   emails > System Logs -> emails.



   Questions-
   1. What is User Management and Data Management?
   A. User Management - It deals with who is using ServiceNow and what they can do.
      | Feature           | Description                                                           |
      | ----------------- | --------------------------------------------------------------------- |
      | **Users**         | People who can log in (admins, employees, managers, etc.)             |
      | **Groups**        | Collection of users (e.g., IT Support, HR Team) — used for assignment |
      | **Roles**         | Permissions given to users or groups (e.g., `admin`, `itil`)          |
      | **User Roles**    | What a specific user can access or do based on their role             |
      | **Delegation**    | Assign another user to act on your behalf                             |
      | **Impersonation** | Admins can act as another user to test or troubleshoot                |

      🔹Main Goal: Control who can access what features, forms, or records.

      Data Management - Deals with what data is stored, how it is organized, and how to maintain or protect it.
      | Feature                   | Description                                                            |
      | ------------------------- | ---------------------------------------------------------------------- |
      | **Tables**                | Store data (like Incident, User, Change, etc.)                         |
      | **Fields (Columns)**      | Attributes of the data (e.g., Priority, State, Description)            |
      | **Forms and Views**       | How the data looks when a user opens a record                          |
      | **Data Import**           | Load external data using import sets                                   |
      | **Transform Maps**        | Define how data from imports gets mapped to ServiceNow tables          |
      | **Data Policies**         | Enforce rules on data (e.g., make field mandatory even during import)  |
      | **Dictionary**            | Definitions of tables, fields, types, default values, etc.             |
      | **ACLs (Access Control)** | Control who can read, write, or delete specific records                |
      | **Record Producers**      | Forms for users to create records (like requesting hardware or issues) |
   🔹When a user logs in, what they see and can do = User Management.
   🔹When a user submits a form or data is imported, how that data is validated and stored = Data Management.



   2. What is Application and Modules?
   A. Application - An Application is a collection of related modules that perform a specific function or serve a business purpose.
      It's like a folder that groups related features together.
      Example: Incident Application includes everything related to incident management.

      Module - A Module is a specific functionality or feature inside an application.
      It appears in the left navigation menu, under an application.
      Modules can be:
      🔸Forms (e.g., Create New)
      🔸Lists (e.g., Open Incidents)
      🔸Reports
      🔸Dashboards
      🔸Scripted pages



   3. What is Form Changes?
   A. Its refer to customizing or modifying a form in ServiceNow so that users can interact with fields/data in a more meaningful way.
      A form in ServiceNow is the UI you see when you open any record (like an Incident or Change Request).
      Key Topics - 
      | Topic                   | Description                                                                  |
      | ----------------------- | ---------------------------------------------------------------------------- |
      | **Form Layout**         | How fields, sections, and tabs are arranged on the form.                     |
      | **Form Design**         | A visual drag-and-drop tool to design forms.                                 |
      | **Form View**           | Different views for different user roles or needs (e.g., Default, ESS View). |
      | **Form Sections**       | Grouping fields into logical blocks (like "Details", "Resolution", etc.)     |
      | **Form Fields**         | The individual fields on a form (like Caller, Short Description, etc.)       |
      | **UI Policies**         | Used to show/hide or make fields read-only or mandatory.                     |
      | **Client Scripts**      | JavaScript that runs on the form in the browser (client-side).               |
      | **Dictionary Settings** | Settings that define how fields behave globally (like max length, default).  |
      | **Form Annotations**    | Labels, help text, etc. that you can place for instructions.                 |
      | **Form Views vs Lists** | Forms show **one record**; lists show **many records**.                      |





      UI Policies allow you to make fields read-only, mandatory, or hidden based on specific conditions like the value of a field.-[ 4 ]



   Reports - Reports in ServiceNow help you see and understand your data in a visual way — like charts, tables, and graphs.
   Types of Reports - 
   Bars - Compare individual or aggregate scores across data dimensions.
   Pies and Donuts - Pies and Donuts show the proportions that make up a whole.
   Time series - Visualize data over time.
   Multidimensional reports - Visualize data using multiple dimensions.
   Scores - Visualize a single data point.
   Other - There are even more chart types to choose from.
             You use reports to answer questions like:
             How many incidents were created this month?
             Which team has the most tasks?
             What’s the average resolution time?

   Notification - A Notification in ServiceNow is used to automatically send emails when certain conditions are met — like a record is created, updated, or a specific field changes.
   There are three sections to configure in a Notification.
   When to send
   Who will receive
   What it will contain

   System Policy - System Policy in ServiceNow refers to rules that control how data behaves in the system — without writing complex code.
   These policies help enforce data consistency, control field behavior, and trigger events. Think of them as the “rules engine” for forms and records.
   1. Data Policies - Enforce rules on records at both UI and import levels.
                      Make fields mandatory, read-only, or hidden — even during data import (like CSV or API).
                     ✅Works on the server side and UI (if "Apply to UI" is checked).
   Ex - Make Short Description mandatory when Category is Inquiry.
   2. UI Policies - Control the behavior of form fields in the browser (client-side).
                    Make fields mandatory, read-only, or hidden, based on conditions.
                   ✅Works only in the UI/form — not during data import.
   Ex - When State = On Hold, make Assignment Group field read-only.
   3. UI Policy Actions - The actual actions (what to do) of a UI Policy.
                          Like: "Make field X read-only", "Show field Y", etc.


   






   TestCases - 
   [1] - Users > Existing Users.
         https://dev347964.service-now.com/now/nav/ui/classic/params/target/sys_user.do%3Fsys_id%3Da8f98bb0eb32010045e1a5115206fe3a%26sysparm_view%3D%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnull%26sysparm_record_row%3D2%26sysparm_record_rows%3D631%26sysparm_record_list%3DORDERBYname
   [2] - 
   [3] - System Notification → Email → Notifications → New
         https://dev347964.service-now.com/now/nav/ui/classic/params/target/sysevent_email_action.do%3Fsys_id%3D46a1e9e5c3e56e10dbc11c65e4013153%26sysparm_view%3D%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnulll
   [4] - System UI > UI Policies
         https://dev347964.service-now.com/now/nav/ui/classic/params/target/sys_ui_policy.do%3Fsys_id%3De32194eac3ed6250dbc11c65e4013137%26sysparm_record_list%3Dshort_descriptionSTARTSWITHMake%2Bfields%2Bread-only%2Bwhen%2BOn%2BHold%255EORDERBYorder%26sysparm_record_row%3D1%26sysparm_record_rows%3D1%26sysparm_record_target%3Dsys_ui_policy
   [5] - Reports > New 
         https://dev347964.service-now.com/now/nav/ui/classic/params/target/sys_report_template.do%3Fjvar_report_id%3Dundefined
         https://dev347964.service-now.com/nav_to.do?uri=%2Fsys_report_template.do%3Fjvar_report_id%3D3977a4e6c361a250dbc11c65e4013133
   [6] - 
   [7] - 1- System Notification → Email → Notifications → New[ Create Notification ]
         2- System Policy → Events → Registry[ Register Event Name ]
         3- System Definition → Scheduled Jobs → Scheduled Script Executions[ To Schdule a Event ] 
         https://dev347964.service-now.com/now/nav/ui/classic/params/target/sysevent_email_action.do%3Fsys_id%3D51d2c269c3696e10dbc11c65e40131d3%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnull%26sysparm_view%3Dadvanced%26sysparm_view_forced%3Dtrue
   [8] - System Definition > Business Rules
         Name: Auto-assign Assignment Group
         Table: Incident
         Active: ✅ (Checked)
         Advanced: ✅ (Check this to show scripting field)
         When: Set to before
         Insert: ✅ (Checked)
         Update: ✅ (Checked)
         Add Conditions (No Scripting Yet): Category is → (select your desired category, e.g., “Software”) && Subcategory is → (select subcategory, e.g., “Email”).
         For Testing - Go to Incident > Create New
         https://dev347964.service-now.com/now/nav/ui/classic/params/target/sys_script.do%3Fsys_id%3D4aa6915ec3216250dbc11c65e40131d9%26sysparm_view%3D%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnull
   [9] - 
   [10] - System Notification → Email → Notifications → New
          https://dev347964.service-now.com/now/nav/ui/classic/params/target/sysevent_email_action.do%3Fsys_id%3D5f8c38a2c3e1a250dbc11c65e401311c%26sysparm_view%3D%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnull
   [11] - Flow Designer > New 
          https://dev347964.service-now.com/now/workflow-studio/builder%3Ftable%3Dsys_hub_flow%26sysId%3D95262786c3292250dbc11c65e401319e
   [12] - https://dev347964.service-now.com/now/nav/ui/classic/params/target/sysevent_email_action.do%3Fsys_id%3D0ee03ce2c3a1a250dbc11c65e401316a%26sysparm_view%3D%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnull
   [13] - 
   [14] - 
   [15] - Group > New,  assignment, Test-> Incident
          https://dev347964.service-now.com/now/nav/ui/classic/params/target/sysrule_assignment.do%3Fsys_id%3De58fe9e2c3e5a250dbc11c65e40131f6%26sysparm_view%3D%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnull
          https://dev347964.service-now.com/now/nav/ui/classic/params/target/incident.do%3Fsys_id%3Da83820b58f723300e7e16c7827bdeed2%26sysparm_view%3D%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnull%26sysparm_record_row%3D1%26sysparm_record_rows%3D1%26sysparm_record_list%3Dcaller_id%253djavascript%253ags.getUserID()%255eactive%253dtrue%255euniversal_requestISEMPTY%255eORDERBYcaller_id
   [16] - System Notification → Email → Notifications → New
          https://dev347964.service-now.com/now/nav/ui/classic/params/target/sysevent_email_action.do%3Fsys_id%3Da5082082c3a9ee10dbc11c65e4013196%26sysparm_view%3D%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnull
   [17] - https://dev347964.service-now.com/now/nav/ui/classic/params/target/problem.do%3Fsys_id%3D-1%26sysparm_stack%3Dproblem_list.do
   [18] - System Notification → Email → Notifications → New
          https://dev347964.service-now.com/now/nav/ui/classic/params/target/sysevent_email_action.do%3Fsys_id%3D01c05aa9c3a96e10dbc11c65e401310e%26sysparm_view%3D%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnull
   [19] - System Definition > Business Rules ->  System Notification → Email → Notifications → New
          https://dev347964.service-now.com/now/nav/ui/classic/params/target/sys_script.do%3Fsys_id%3D3b34295ec3616250dbc11c65e4013121%26sysparm_view%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnull
   [20] - System Notification → Email → Notifications → New
          https://dev347964.service-now.com/now/nav/ui/classic/params/target/sysevent_email_action.do%3Fsys_id%3D40f0e8cac369ee10dbc11c65e4013189%26sysparm_view%3D%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnull
   [21] - System Notification → Email → Notifications → New
          https://dev347964.service-now.com/now/nav/ui/classic/params/target/sysevent_email_action.do%3Fsys_id%3Dd56485eac3e1a250dbc11c65e4013129%26sysparm_view%3D%26sysparm_domain%3Dnull%26sysparm_domain_scope%3Dnull
   [22] - 
   [23] - Reports > New 
          https://dev347964.service-now.com/nav_to.do?uri=%2Fsys_report_template.do%3Fjvar_report_id%3Da925e462c361a250dbc11c65e4013187



   Assesment-1 Ques
   1. Data Policy and UI policy , (Client Side  v/s  Server Side) in detail.
   A. ✅UI Policy
      Purpose: To dynamically change the behavior of fields on forms.
      Executes on: Client Side (in the browser)
      Use Cases:
      Make a field mandatory, read-only, or hidden based on conditions.
      Example: If "State = Closed", make "Resolution Notes" mandatory.
      Key Point: Only affects form views used by humans (not imports/API).
      ✅Data Policy-
      Purpose: To enforce mandatory or read-only rules on data, even outside of the UI.
      Executes on: Server Side
      Use Cases:
      Enforce business rules regardless of how data is entered (UI, script, import, REST).
      Example: Make “Email” mandatory during CSV data import.
      Key Point: Applies to all data entry points, not just forms.

      Use UI Policy:
      When you want to change form behavior (hide fields, show messages, etc.)
      When it's purely UI-focused (for human users).

      Use Data Policy:
      When you want to enforce rules across forms, APIs, imports, and workflows.
      For ensuring data integrity no matter where it comes from.

     | 🔹 **Feature**                    | 💻 **Client Side**                                                | 🖥️ **Server Side**                                      |
     | --------------------------------- | ----------------------------------------------------------------- | -------------------------------------------------------- |
     | **Runs On**                       | User’s browser (UI/form)                                          | Server/backend (ServiceNow instance)                     |
     | **Speed**                         | Faster (no need to go to the server)                              | Slower (requires server communication)                   |
     | **Used For**                      | Form behavior (hide/show fields, make fields mandatory/read-only) | Business logic, data processing, database operations     |
     | **Examples**                      | - UI Policy  <br> - Client Script <br> - Form Design              | - Business Rule <br> - Script Include <br> - Data Policy |
     | **Scope**                         | Only on form when user interacts with UI                          | Applies globally (UI, imports, APIs, background scripts) |
     | **Security**                      | Less secure (users can inspect or bypass in browser)              | More secure (logic is hidden from user)                  |
     | **Scripting Languages**           | JavaScript (limited APIs)                                         | JavaScript (with Glide API)                              |
     | **When to Use**                   | Improve user experience <br> Validate before form submission      | Validate data <br> Trigger actions after saving to DB    |
     | **Can access database directly?** | ❌ No                                                              | ✅ Yes                                                    |
     | **Example Use Case**              | Make “Comments” field mandatory if “State = Closed”               | Auto-assign group based on Category after insert/update  |



   2. What is Dictionary, Attributes, Dictionary Override?
   A. Dictionary - A Dictionary entry defines how a field (column) behaves in a table.
                   It controls field type, length, mandatory status, default values, etc.
      Ex - If you create a field Phone Number in the User table:
           Type: String
           Max Length: 10
           Mandatory: Yes
           This setup is done via the Dictionary.

      Attributes - Attributes are extra settings you apply to control field behavior.
                   You add them as comma-separated text inside the Dictionary entry.
      | Attribute                               | Purpose                                  |
      | --------------------------------------- | ---------------------------------------- |
      | `readonly=true`                         | Makes field read-only                    |
      | `email=true`                            | Validates email format                   |
      | `ref_auto_completer=AJAXTableCompleter` | Enables autocomplete in reference fields |
      | `default_role=itil`                     | Sets default role in reference field     |

      Dictionary Override - Used when a field is inherited (e.g., from a parent table), and you want to change its properties in a child table only.
      You override things like:
      Mandatory
      Default Value
      Read-only
      Reference Qualifier



   3. What is Assignment Rule, Assignment lookup, Priority Lookup, Data Lookup.
   A. 🔸Assignment Rule - Used to automatically assign a task (like an incident or request) to the correct group or user based on conditions.
      Ex - If the incident Category = Network, assign it to the Network Support group.
      🔸Assignment Lookup Rules - Looks up a predefined table to auto-assign based on matching field values.
      Ex - If Location = Bangalore and Category = Hardware, assign to Bangalore Hardware Team.
      🔸Priority Lookup Rules - Automatically sets Priority based on Impact and Urgency.
      Ex - Impact = High, Urgency = Medium → Then Priority = 2 (High).
      🔸Data Lookup Rules - Used to auto-populate any field (like Assignment Group, Location, etc.) based on conditions.
      Ex - Configuration Item = Printer , Location = Delhi → Then Assignment Group = Printer Support Delhi



   4. What is Form, List and Views?
   A. Form - A Form is a single record's detailed view.
             It shows fields (like Caller, Short Description, Priority) where users can view, enter, or edit data.
             Configure > Form Layout.
      List - A List shows multiple records in a table (like all incidents).
             It’s like a spreadsheet with columns and rows.
             Configure > List Layout
      View - A View is a custom layout of a Form or List for specific users/roles.
             Example: Manager View (with extra fields) vs. Self-Service View (limited fields)
             Configure > Form Design


   5. What is Table? Type of relations in Tables.  (how to inherit).
   A. A Table is like a spreadsheet where data is stored in rows (records) and columns (fields).
      Everything in ServiceNow — incidents, users, tasks — is stored in tables.
      Types of Tables:
      Base Table - A table with no parent.
                  Ex: Task is a base table.
      Extended Table - A child table that inherits fields from a base table.
      Ex: Incident, Change Request, and Problem all extend the Task table.



   6. What is Changes. Types of Changes  (Request   changes,   _________,   more).
   A. In ServiceNow, "Changes" refer to the process of managing updates or modifications in IT systems in a controlled and auditable way. Change Management is a key part of ITSM (IT Service Management).
      Types of Chnages.
      |   **Change Type**    |             **Description**                                               |
      | -------------------- | ------------------------------------------------------------------------- |
      | **Standard Change**  | Pre-approved, low-risk, repeatable changes (e.g., adding printer drivers) |
      | **Normal Change**    | Non-emergency changes that go through full approval and assessment        |
      | **Emergency Change** | Critical, urgent changes to fix a major incident or outage                |
      Change > Administration > Change Models



   7. What is View. How to create View.
   A. A View in ServiceNow defines how forms or lists appear for users. You can create different views for different roles, use cases, or departments.



   8. Best Practices (How to create mandatory fields). 
   A. In ServiceNow, making a field mandatory (required) ensures that users provide necessary information before submitting or saving a record. 
      There are several best practices depending on how and when you want the field to be mandatory.

      1. Using the Dictionary- 
      Navigate to the field via:
      System Definition → Dictionary
      Search for the field and open it.
      Check the Mandatory checkbox.
      Save the record.

      2. Using UI Policies- 
      You want the field to be mandatory based on conditions (e.g., only on certain forms or values).
      Go to:
      System UI → UI Policies
      Click New.
      Select the table (e.g., Incident) and define the condition.
      In the UI Policy Actions related list, click New.
      Choose the field, and set Mandatory = True.



   9. Incident (How to change Date format).
   A. Navigate to: System Properties → System → Date/Time.
      glide.sys.date_format – Format for Date fields
      Example: yyyy-MM-dd



   10.What is locked out check Box? How to assign User roles.
   A. The "Locked out" checkbox on the User [sys_user] record prevents a user from logging in.
      🔒How to Use:
      Navigate to:
      User Administration → Users
      Open the user record.
      Check or uncheck the "Locked out" checkbox.
      Checked: User is locked out of the system.
      Unchecked: User can log in normally.
      Click Save or Update.

      🔐When to Use:
      After multiple failed login attempts.
      Security concerns or suspended access.
      Compliance reasons.

      Assign Roles to the Users: 
      Steps:
      Navigate to: User Administration → Users
      Open the user record.
      Scroll to the Roles related list.
      Click Edit.
      In the slushbucket, move roles (e.g., admin, itil, approver_user) from left to right.
      Click Save.



    11. What is role? How to create new role and How to assign role to a User.
    A.  A role in ServiceNow is a collection of permissions that controls what a user can see and do in the platform.
        Roles are used to grant access to applications, modules, records, fields, and actions.
        Ex - admin, itil.

        How to Create a New Role- 
        Steps:
        Navigate to:
        User Administration → Roles
        Click New.
        Fill in:
        Name (e.g., custom_hr_analyst)
        Description (optional but helpful)
        Click Submit.

        How to Assign a Role to a User
        Direct Assignment via User Record
        Navigate to:
        User Administration → Users
        Open the user record.
        Scroll to the Roles related list.
        Click Edit.
        Select desired role(s) from the left and move to the right.
        Click Save.



    12. What is Backend name for particular table or group.
     A. Steps to Find:
        Navigate to:
        System Definition → Tables
        Search for your table (e.g., "Incident").
        The "Name" column shows the backend name:
        Incident → incident
        Change Request → change_request
