1.  What is NextJS? Use-case.
A.  Next.js is a React framework for building full-stack web applications. You use React Components to build user interfaces, and Next.js for additional features and optimizations.
    Think of React as a car engine.
    Next.js is the entire car with the engine inside itâ€”plus wheels, brakes, gears, and navigation.

    Why do we need Next.js if React already exists?
    ğŸ”¹React by itself is not opinionated. If you want:
    ğŸ”¹Routing â†’ you install react-router
    ğŸ”¹State management â†’ Redux / Zustand
    ğŸ”¹Build system â†’ Webpack / Vite
    ğŸ”¹API handling â†’ Express or other backend framework
    ğŸ”¹SEO â†’ You need SSR setup manually

    In contrast, Next.js has most of these built-in:
    ğŸ”¹File-based routing (pages or app directory)
    ğŸ”¹Automatic code splitting & optimized bundling
    ğŸ”¹API routes (no need for a separate backend for simple APIs)
    ğŸ”¹Middleware support (auth, logging, redirects, etc.)
    ğŸ”¹Server-side rendering (SSR) & Static site generation (SSG)
    ğŸ”¹Image optimization & font optimization
    ğŸ”¹TypeScript, Tailwind, ESLint support out-of-the-box

    ğŸ‘‰Use React when you only need a frontend UI.
    ğŸ‘‰Use Next.js when you need a production-ready, SEO-optimized, full-stack application with routing, APIs, performance optimizations, and middleware already included
