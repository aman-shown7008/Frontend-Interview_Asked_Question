Q.  What is Tailwind CSS? And use-case of it?
A.  Tailwind CSS is a CSS framework that speeds up development by letting you use predefined utility classes instead of writing custom CSS. Each class serves a single purpose (like padding, margin, color, etc.), so there's no need to create new CSS classes or override styles.
    This leads to faster development, cleaner code, and better performance.

    Use-Case-
    ‚úÖFast Prototyping ‚Äì Build UI quickly without writing custom CSS
    ‚úÖClean & Consistent Design ‚Äì Utility classes follow a design system
    ‚úÖFully Customizable ‚Äì You can override colors, fonts, spacing in tailwind.config.js
    ‚úÖResponsive Design Built-in ‚Äì Use md:, lg: etc. for media queries
    ‚úÖPerfect for React/JSX ‚Äì Works really well inside component-based frameworks



Q.  Why should we use Tailwind CSS? over other framework.
A.  Why Tailwind is Best in Most Cases:
    1Ô∏è‚É£Fast Prototyping - Build UIs quickly without writing custom CSS using utility classes directly in HTML/JSX.
    2Ô∏è‚É£Clean & Consistent Design - Utility classes follow a design system, ensuring a consistent, scalable UI.
    3Ô∏è‚É£Fully Customizable - Easily override colors, fonts, spacing, and more in tailwind.config.js to match your design.
    4Ô∏è‚É£Responsive Design Built-In - Use built-in responsive classes like sm:, md:, lg: for mobile-first, adaptable layouts.
    5Ô∏è‚É£Perfect for React/JSX - Works seamlessly within component-based frameworks like React, Vue, and Next.js.
    6Ô∏è‚É£Small CSS Bundle Size - Automatically removes unused styles in production, resulting in lightweight CSS (often <10kB).
    7Ô∏è‚É£Utility-First Styling - Compose styles directly in your markup with utility classes like flex, p-4, and text-center.
    8Ô∏è‚É£Unique, Custom Designs - Create custom designs without being limited to pre-built templates or components.
    9Ô∏è‚É£Tailwind UI / Tailwind Plus - Access hundreds of ready-made, responsive UI components for faster development.
    üîüModern Developer Experience - Leverages the latest CSS features and provides an intuitive, efficient developer workflow.

    üìå When to Use the Others:
    ‚úÖSass - When building large-scale custom styles with advanced logic.
    ‚úÖBootstrap - When you want quick layouts with ready-made components.
    ‚úÖMaterial UI - When you need professional-looking components fast in a React app.
    ‚úÖChakra UI - When you want clean, accessible components with props-based styling.



