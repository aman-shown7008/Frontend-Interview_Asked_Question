1.  What is Redux Toolkit? Use-Case.
A.  Redux is a state management library for JavaScript applications. It helps manage and share data (state) across different parts of an app in a predictable way.
    Think of it as a global storage system where all components can access and update data efficiently.
    Redux helps manage global state in a structured way, making complex apps more predictable, maintainable, and scalable. 

    Why Do We Need Redux?
    Imagine you're building a shopping app:
    🔹The Navbar shows the number of items in the cart.
    🔹The Product Page allows adding items to the cart.
    🔹The Cart Page displays all added products.
    Without Redux, you would have to pass data manually between components, which gets messy as your app grows.
    Redux solves this by storing data centrally, making updates easy and consistent.

    Where is Redux Used?
   🔹 E-commerce apps (Cart, Orders)
   🔹 Social media apps (Likes, Comments)
   🔹 Dashboards (User Analytics, Reports)
   🔹 Large-scale web applications



2.  What are the Important terms in Redux-Toolkit?
A.  Redux Toolkit simplifies Redux by providing built-in utilities. Here are the main terms you need to know:
    1️⃣ Store (Global Data Storage)- The store is where all the app’s data (state) is stored in one central place.
    Use-Case - Think of it like a warehouse in an e-commerce app where all products, user info, and cart data are stored.

    2️⃣ Slice (Mini Store for a Feature) - A slice is like a small part of the store that manages a specific feature’s data.
    Use-Case - A cart slice in an online shopping app manages items added to the cart.

    3️⃣ Reducers (How Data Changes) - A reducer is a function that updates the store based on actions.
    When a user adds a product to the cart, the cartReducer updates the cart state.

    4️⃣ Actions (Commands to Change Data) - Actions are messages that tell Redux what to do (like adding or removing items).
    Use-Case - A button click in an app sends an action to add an item to the cart.

    5️⃣ Dispatch (Trigger an Action) - Dispatch sends an action to the store, telling it to update the state.
    Use-Case - A user clicking "Add to Cart" button dispatches an action.

    6️⃣ Selector (Get Data from Store) - Selectors help retrieve data from the store.
    Use-Case - Show the number of items in the cart in the Navbar.

    7️⃣ createAsyncThunk (Handling API Calls) - Handles async API calls like fetching data from a backend.
    Use-Case - Fetching a list of products from an API.

    8️⃣ Middleware (Extra Features Like Logging) - Middleware lets you run extra logic (like logging actions, authentication, etc.).
    Use-Case - Logging every action a user performs (e.g., tracking button clicks).
    






















